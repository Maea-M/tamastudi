/* 
√âtats de notre Tamastudi possibles :
- ü•ö : partie non lanc√©e
- üê£ : naissance pendant tant qu'il n'a pas fait son 1er caca
Ensuite il devient un "grand" avec une humeur variable
- üò¢ : triste 0/5
- üôÅ : pas content 1/5
- üôÇ : normal 2/5
- üòÑ : content 3/5
- ü§ó : heureux 4/5
- ü•∞ : tr√®s heureux 5/5
- üëª : mort 0/5 pendant plus d'une minute 


/* PHASE 0 : activer le tamastudi 
1) Cliquer sur le bouton du milieu
2) Ajouter un compteur qui attend d'avoir une valeur max de 5
3) Alors on fait naitre notre tama
*/
const start = () => {
    // 1) Cliquer sur le bouton du milieu
    const buttonCenter = document.querySelector('.js-button[data-direction="center"]');
    // 2) Ajouter un compteur qui attend d'avoir une valeur max de 5
    let count = 0;
    buttonCenter.addEventListener("click", () => {
        count++;
        if (count === 5) {
        // 3) Alors on fait naitre notre tama
        birth();
        }
    });
};

/* 
    PHASE 1 : la naissance de mon tama 
        1) demander le nom de mon personnage
        2) fait √©clore mon oeuf pour passer au poussin
        3) affiche mes vitals
        4) affiche le nom de mon tama dans les vitals
        5) mettre les scores des vitals √† 5
*/

const birth = () => {
    // 1) demander le pr√©nom
    const tamaName = prompt("Quel nom a votre tamastudi ?");
    // 2) fait √©clore mon oeuf pour passer au poussin
    showInScreen("üê£");
    // 3) affiche mes vitals
    const vitals = document.querySelector(".js-vitals");
    vitals.classList.remove("hidden");
    // 4) affiche le nom de mon tama dans les vitals
    const nameDisplay = document.querySelector(".js-tamaName");
    nameDisplay.textContent = tamaName;
    // 5) mettre les scores des vitals √† 5
    const scoresDisplay = document.querySelectorAll(".js-score");
    scoresDisplay.forEach((score) => {score.textContent = 5;});
    // 6) afficher les actions
    const actions = document.querySelector(".js-actions");
    actions.classList.remove("hidden");
    // 7) appel de la fonction pour le faire "grandir"
    evolve();
};

/* 
    PHASE 2 : l'√©volution de mon tama
        1) Attendre que notre tamaStudi ait une "premi√®re envie"
        2) Il devient grand
*/
const evolve = () => {
    // 1) Attendre que notre tamaStudi ait une "premi√®re envie"
    const functionToExecute = () => {
        showInScreen("ü•∞");
    };
    wantsTo(functionToExecute);
};

/* LES ENVIES : 
    Fonction pour g√©rer 
        - üòã : faim, al√©atoire minimum 30 sec et max 3 minutes
        - ü•± : jouer, al√©atoire minimum 30 sec et max 3 minutes
        - üí© : caca, al√©atoire minimum 30 sec et max 3 minutes uniquement apr√®s avoir mang√©
    1) Cr√©er une fonction qu'on va pouvoir appeler plus tard dans notre code
    2) Stocker les envies de mon tama dans une variable
    3) Avec un setTimeout choisir une envie al√©atoire
    4) La dur√©e du setTimeout est dynamique est comprise entre une valeur max et une valeur min
    5) Afficher l'envie du tama sur notre √©cran 
    6) L'envie de faire caca ne peut √™tre faite que s'il a d√©j√† mang√©
*/

const wantsTo = (callback) => {
    const needs = ["üòã", "ü•±", "üí©"];
    const minDuration = 1000;
    const maxDuration = 3000;
    const duration = getRandomInt({
        min: minDuration,
        max: maxDuration,
    });
    setTimeout(() => {
        const randomIndexNeeds = getRandomInt({
        max: needs.length,
    });
    const desire = needs[randomIndexNeeds];
        if (callback) {
            callback();
        } else {
            showInScreen(desire);
        }
    }, duration);
};

  /* Fonction du retourne un nombre al√©atoire compris entre un min et max */
const getRandomInt = (props) => {
    const max = props.max;
    // Ternaire = condition "raccourcie" = condition ? valeur si oui : valeur si non
    const min = props.min ? props.min : 0;
    return Math.floor(Math.random() * (max - min) + min);
};

  /* Fonction qui g√®re l'affichage des emoticones dans l'√©cran du tama */
const character = document.querySelector(".js-character");
const showInScreen = (display) => {
    character.textContent = display;
};

  // Lance la fonction de "d√©but de mon Tama"
start();